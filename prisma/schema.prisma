// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  account_id            Int                     @id @unique @default(autoincrement())
  account_name          String
  account_email         String
  account_password      String
  account_roleId        Role                    @relation(fields: [role_id], references: [role_id])
  role_id               Int
  AccountBusinessAccess AccountBusinessAccess[]
}

model AccountBusinessAccess {
  accountBusinessAccess_id         Int      @id @unique @default(autoincrement())
  accountBusinessAccess_accountId  Account  @relation(fields: [accountId], references: [account_id])
  accountId                        Int
  accountBusinessAccess_businessId Business @relation(fields: [business_id], references: [business_id])
  business_id                      Int
}

model Role {
  role_id   Int       @id @default(autoincrement())
  role_name String    @unique
  Accounts  Account[]
}

model BanDetail {
  banDetail_id             Int           @id @default(autoincrement())
  banDetail_reason         String
  banDetail_startDate      String
  banDetail_endDate        String
  banDetail_isBanPending   Boolean
  banDetail_bannedPersonId BannedPerson? @relation(fields: [bannedPerson_id], references: [bannedPerson_id])
  bannedPerson_id          Int?
}

model BannedPerson {
  bannedPerson_id    Int           @id @default(autoincrement())
  bannedPerson_image String?
  bannedPerson_name  String
  BanList            BanList[]
  BanDetail          BanDetail[]
  AlertInfo          AlertDetail[]
}

model BanList {
  banList_id             Int          @id @unique @default(autoincrement())
  banList_bannedPersonId BannedPerson @relation(fields: [banList_id], references: [bannedPerson_id])
  bennedPerson_id        Int
  banList_venueId        Venue        @relation(fields: [venue_id], references: [venue_id])
  venue_id               Int
}

model AlertDetail {
  alertDetails_id             Int          @id @unique @default(autoincrement())
  bannedPersonId              BannedPerson @relation(fields: [alertDetails_bannedPersonId], references: [bannedPerson_id])
  alertDetails_bannedPersonId Int
  businessId                  Business     @relation(fields: [alertDetails_businessId], references: [business_id])
  alertDetails_businessId     Int
}

model Venue {
  venue_id         Int       @id @unique @default(autoincrement())
  venue_name       String
  venue_logo       String?
  venue_businessId Business  @relation(fields: [business_id], references: [business_id])
  business_id      Int
  BanList          BanList[]
}

model Business {
  business_id           Int                     @id @unique @default(autoincrement())
  business_name         String
  business_logo         String?
  Venue                 Venue[]
  AlertInfo             AlertDetail[]
  AccountBusinessAccess AccountBusinessAccess[]
}
